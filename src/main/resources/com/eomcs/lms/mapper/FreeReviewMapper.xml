<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eomcs.lms.dao.FreeReviewDao">

	<!-- Tour Map -->
	<resultMap type="freereview" id="freeReviewMap">
		<id column="free_review_id" property="no" />
		<result column="member_id" property="memberNo" />
		<result column="reservation_id" property="reservationNo" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="created_date" property="createdDate" />
  <result column="viewcount" property="viewCount" />
  <result column="score" property="score" />
<association property="member" javaType="member">
    <id column="member_id" property="no" />
    <result column="name" property="name" />
 </association>

<association property="city" javaType="city">
      <id column="city_id" property="no" />
      <result column="country_id" property="countryNo" />
      <result column="city_name" property="cityName" />
    </association>

	</resultMap>
  
  
 <insert id="insert"   useGeneratedKeys="true" keyProperty="no" parameterType="freereview" >
    insert into free_review(
    member_id,
    <if test="reservationNo != 0">reservation_id,</if>
    viewcount,
    title,
    content,
    score
   )
    values(
    #{memberNo},
     <if test="reservationNo != 0"> #{reservationNo},</if>
   0,
    #{title},
    #{content},
    #{score})
  
  </insert>
  
  <delete id="delete" parameterType="int">
    delete from free_review 
    where free_review_id = #{no}
  </delete>

  
  <update id="increaseCount" parameterType="int">
    update free_review
    set 
      viewcount = viewcount + 1 
    where free_review_id = #{value}
  </update>
  
  
  <select id="countCity" resultType="int" parameterType="map">
  select count(DISTINCT free_review_id) from free_review_city
    <where>
    <if test="searchOne != null">
       <bind name="one" value="searchOne" />
       or city_id = #{one}
       </if>
       <if test="searchTwo != null">
       <bind name="two" value="searchTwo" />
       or city_id = #{two}
       </if>
       <if test="searchThree != null">
       <bind name="three" value="searchThree" />
       or city_id = #{three}
       </if>
       <if test="searchFour != null">
       <bind name="four" value="searchFour" />
       or city_id = #{four}
       </if>
       <if test="searchFive != null">
       <bind name="five" value="searchFive" />
       or city_id = #{five}
       </if>
       <if test="searchSix != null">
       <bind name="six" value="searchSix" />
       or city_id = #{six}
       </if>
       <if test="searchSeven != null">
       <bind name="seven" value="searchSeven" />
       or city_id = #{seven}
       </if>
       <if test="searchEight != null">
       <bind name="eight" value="searchEight" />
       or city_id = #{eight}
       </if>
       </where>
  </select>
 <select id="countAll" resultType="int" parameterType="map">
    select count(*)
    from free_review f, member m
       <where>
       f.member_id = m.member_id
    
 <if test="searchAll != null">
        <bind name="pattern1" value="'%' + searchAll + '%'" />
       and m.name like #{pattern1}
        or f.title like #{pattern1}
        or f.content like #{pattern1} 
      </if>
      <if test="searchwithName != null">
      <bind name="pattern1" value="'%' + searchwithName + '%'" />
      and m.name like #{pattern1}</if>
       <if test="searchwithNickname != null">
      <bind name="pattern1" value="'%' + searchwithTitle + '%'" />
      and f.title like #{pattern1}</if>
       <if test="searchwithEmail != null">
      <bind name="pattern1" value="'%' + searchwithContent + '%'" />
      and f.content like #{pattern1}</if>
     
    </where>
  </select>
  
<select id="findByNo" resultMap="freeReviewMap" parameterType="int">
   select
     *
    from member m, free_review fv
    where
   fv.member_id = m.member_id
    and  fv.free_review_id = #{no}
  </select>


<select id="get" resultMap="freeReviewMap" parameterType="int">
   select member_id from free_review where free_review_id = #{no}
  </select>
  
  
  <select id="findCity" resultMap="freeReviewMap" parameterType="map">
 select DISTINCT f.free_review_id,f.title,m.name,f.created_date,f.viewcount from free_review f, free_review_city fc,member m
   <where>
    <if test="searchOne != null">
       <bind name="one" value="searchOne" />
       (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{one}) 
       </if>
       <if test="searchTwo != null">
       <bind name="two" value="searchTwo" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{two}) 
       </if>
       <if test="searchThree != null">
       <bind name="three" value="searchThree" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{three}) 
       </if>
       <if test="searchFour != null">
       <bind name="four" value="searchFour" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{four}) 
       </if>
       <if test="searchFive != null">
       <bind name="five" value="searchFive" />
      or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{five}) 
       </if>
       <if test="searchSix != null">
       <bind name="six" value="searchSix" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{six}) 
       </if>
       <if test="searchSeven != null">
       <bind name="seven" value="searchSeven" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{seven}) 
       </if>
       <if test="searchEight != null">
       <bind name="eight" value="searchEight" />
       or (f.member_id=m.member_id and fc.free_review_id=f.free_review_id and fc.city_id= #{eight}) 
       </if>
       </where>
           order by
    f.free_review_id desc
    <if test="#{size != null || rowNo != null}">
      limit #{rowNo}, #{size}
    </if>
       </select>
   

 <select id="findAll" resultMap="freeReviewMap" parameterType="map">
    select
   *
    from
    free_review f, member m
     <where>
       f.member_id = m.member_id
 <if test="searchAll != null">
        <bind name="pattern1" value="'%' + searchAll + '%'" />
       and m.name like #{pattern1}
        or f.title like #{pattern1}
        or f.content like #{pattern1} 
      </if>
      <if test="searchwithName != null">
      <bind name="pattern1" value="'%' + searchwithName + '%'" />
      and m.name like #{pattern1}</if>
       <if test="searchwithNickname != null">
      <bind name="pattern1" value="'%' + searchwithTitle + '%'" />
      and f.title like #{pattern1}</if>
       <if test="searchwithEmail != null">
      <bind name="pattern1" value="'%' + searchwithContent + '%'" />
      and f.content like #{pattern1}</if>
     
    </where>
    order by
    created_date desc
    <if test="#{size != null || rowNo != null}">
      limit #{rowNo}, #{size}
    </if>
  </select>
  
  <update id="reservationNull" parameterType="int">
   UPDATE free_review SET reservation_id = NULL WHERE free_review_id =  #{reservationNo};
  
  </update>
  
  <update id="update" parameterType="freeReview">
    update free_review
    <set>
      <if test="title != null">title = #{title},</if>
      <if test="reservationNo != 0">reservation_id = #{reservationNo},</if>
      <if test="score != null">score = #{score},</if>
      <if test="content != null">content = #{content}</if>
  
    </set>
    where
    free_review_id = #{no}
  </update>
  
  
  <insert id="insertCity" parameterType="map">
    insert into
    free_review_city(free_review_id, city_id)
    values(#{freeReviewNo}, #{cityNo})
  </insert>
  
  <select id="selectReviewCity" resultType="map" parameterType="int">
   select 
   c.city_id, c.city_name 
   from 
   free_review_city fc, city c 
   where 
   fc.city_id = c.city_id and 
   free_review_id =#{no}
    
    
    
  </select>
  <delete id="deleteReviewCity" parameterType="int">
    delete from free_review_city where free_review_id =  #{no}
  </delete>
  
  
  <!-- findByTourNo > -->
  <select id="findByTourNo" resultMap="freeReviewMap" parameterType="int">
    select * from free_review as f
    join reservation as r on r.reservation_id = f.reservation_id
    join member as m on r.member_id = m.member_id
    join tour as t on r.tour_id = t.tour_id where t.tour_id=#{tourNo};
  </select>
  
  
</mapper>










